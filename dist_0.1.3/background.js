"use strict";chrome.runtime.onInstalled.addListener(function(){chrome.tabs.create({url:'https://github.com/skylize/clerc#readme'})});function reloadExtensions(e){function o(o){chrome.management.setEnabled(o.id,!1,function(){chrome.management.setEnabled(o.id,!0,function(){function n(){chrome.runtime.sendMessage(o.id,e)}o.type.match(/app/)?chrome.management.launchApp(o.id,n):n(),console.log(o.name+" reloaded"),badge.tempSet("ok")})})}var n=e.path;chrome.management.getAll(function(e){e=e.filter(function(e){return!("development"!==e.installType||!n&&e.enabled!==!0||n&&n!==e.name&&n!==e.id||e.id===chrome.runtime.id)}),e.forEach(o)})}function connectSocket(){if(!ws||3===ws.readyState){ws=new WebSocket("ws://localhost:35729/livereload");var e={command:"hello",protocols:["http://livereload.com/protocols/official-7","http://livereload.com/protocols/official-8","http://livereload.com/protocols/2.x-origin-version-negotiation"]};e=JSON.stringify(e),ws.onerror=function(){badge.set("no"),badge.delay("disconnected",1200),console.log("failed to connect to livereload")},ws.onopen=function(){console.log("connected to livereload"),ws.send(e),badge.set("ok"),badge.delay("connected",1200),chrome.browserAction.onClicked.removeListener(connectSocket),chrome.browserAction.onClicked.addListener(disconnectSocket),ws.onclose=onClosedSocket},ws.onmessage=function(e){var o=JSON.parse(e.data);"reload"===o.command&&reloadExtensions(o)}}}function onClosedSocket(){console.log("disconnected from livereload"),badge.set("disconnected"),chrome.browserAction.onClicked.removeListener(disconnectSocket),chrome.browserAction.onClicked.addListener(connectSocket),ws.onclose=null}function disconnectSocket(){ws.close()}var badge={badge:"hide",badges:{hide:[""],ok:[" OK ","#44992c"],no:[" NO ","#f33"],connected:["--(c--",[42,181,130,200]],disconnected:["-(  c-",[179,179,29,200]]},set:function(e){badge.badge=e,chrome.browserAction.setBadgeText({text:this.badges[e][0]}),this.badges[e][1]&&chrome.browserAction.setBadgeBackgroundColor({color:this.badges[e][1]})},tempSet:function(e,o){var n=badge.badge;n!==e&&(badge.set(e),badge.delay(n,o))},delay:function(e,o){setTimeout(function(){badge.set(e)},o||1200)}};badge.set("disconnected");var ws;chrome.browserAction.onClicked.addListener(connectSocket),connectSocket();
//# sourceMappingURL=/maps/background.js.map